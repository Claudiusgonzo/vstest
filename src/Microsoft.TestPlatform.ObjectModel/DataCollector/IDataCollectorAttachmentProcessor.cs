// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT license. See LICENSE file in the project root for full license information.

namespace Microsoft.VisualStudio.TestPlatform.ObjectModel.DataCollection
{
    using System;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    using Microsoft.VisualStudio.TestPlatform.ObjectModel.Logging;

    /// <summary>
    /// Interface for data collectors add-ins that choose to reprocess generated attachments
    /// </summary>
    public interface IDataCollectorAttachmentProcessor
    {
        /// <summary>
        /// Gets the attachments Uris, which are handled by attachment processor
        /// </summary>
        IEnumerable<Uri> GetExtensionUris();

        /// <summary>
        /// Indicates whether attachment processor is supporting incremental processing of attachments
        /// </summary>
        bool SupportsIncrementalProcessing { get; }

        /// <summary>
        /// Reprocess attachments generated by independent test executions
        /// </summary>
        /// <param name="attachments">Attachments to be processed</param>
        /// <param name="progressReporter">Progress reporter. Accepts integers from 0 to 100</param>
        /// <param name="logger">Message logger</param>
        /// <param name="cancellationToken">Cancellation token</param>
        /// <returns>Attachments after reprocessing</returns>
        Task<ICollection<AttachmentSet>> ProcessAttachmentSetsAsync(ICollection<AttachmentSet> attachments, IProgress<int> progressReporter, IMessageLogger logger, CancellationToken cancellationToken);
    }
}
